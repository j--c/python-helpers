#!/bin/bash


# -------------------------------------
# Some variable declaration
# -------------------------------------
bdd=1
unttst=2
notst=3
prj_name=$1
src_dir='src'
init_file='__init__.py'
mnu_spcr="="
spcr=""
mnu_h_brdr="========================================"
mnu_v_brdr="= "


init_unttst() {
    local tst_dir='test'
    mkdir -p $tst_dir/$prj_name
    touch $tst_dir/$init_file
    touch $tst_dir/$prj_name/$init_file
}

init_bdd() {
    local ftrs_dir='features'
    local stps_dir='steps'
    mkdir -p $ftrs_dir/$stps_dir
}

# -------------------------------------
# Install pip packages
# -------------------------------------
inst_pip_pkgs() {
    local pip_log="pip.log"

    touch $pip_log
    if [ $tst_inpt = $bdd ]; then
        pip install behave > $pip_log
    fi
}

# -------------------------------------
# Write .gitignore
# -------------------------------------
wrt_gitignore() {
    touch .gitignore
    echo "# Byte-compiled / optimized / DLL files" >> .gitignore
    echo "__pycache__/" >> .gitignore
    echo "*.py[cod]" >> .gitignore
    echo "*.py.class" >> .gitignore
    echo "" >> .gitignore
    echo "# Virtual environment" >> .gitignore
    echo "venv/" >> .gitignore
    echo "" >> .gitignore
    echo "# Migrations / Alembic" >> .gitignore
    echo "migrations/" >> .gitignore
    echo "" >> .gitignore
    echo "# Databases" >> .gitignore
    echo "*.db" >> .gitignore
}

init_venv() {
    python3 -m venv venv
    source venv/bin/activate
}

init_prj_dir() {
    mkdir $prj_name
    cd $prj_name
    mkdir -p $src_dir/$prj_name
    touch $src_dir/$init_file
    touch $src_dir/$prj_name/$init_file
}

# -------------------------------------
# Get Test Input From User
# -------------------------------------
get_tst_inpt_frm_usr() {
    local input=0
    local inpt_opts=("1" "2" "3")
    read -n 1 usr_opt 
    for ((i=0 ; i < ${#inpt_opts[@]}; i++)); do
        if [ $usr_opt = ${inpt_opts[$i]} ]; then
            input=$usr_opt
        fi
    done
    echo $spcr
    return $input
}


# -------------------------------------
# Print Testing Menu
# -------------------------------------
prnt_tst_mnu() {
    local mnu_ttl="Enter number of your 'test' framework."
    local mnu_opts=("Behave" "Unittest" "None")
    echo $mnu_h_brdr
    echo "$mnu_v_brdr $mnu_ttl"
    echo $mnu_h_brdr
    echo $mnu_spcr
    for ((m=0 ; m < ${#mnu_opts[@]}; m++)); do
        num=$(($m+1))
        echo "$mnu_v_brdr $num. ${mnu_opts[$m]}"
    done
    echo $mnu_spcr
    echo $mnu_h_brdr
}


# -------------------------------------
# Main
# -------------------------------------
main () {
    prnt_tst_mnu
    get_tst_inpt_frm_usr
    tst_inpt=$?
    if [ $tst_inpt = 0 ]; then
        echo $spcr
        echo "Invalid testing method entered!"
        echo $spcr
    else
        echo "Creating project directory..."
        init_prj_dir

        echo "Creating virtual environment..."
        init_venv

        echo "Installing pip packages..."
        inst_pip_pkgs

        if [ $tst_inpt = $bdd ]; then
            echo "Initializing Behave framework ..."
            init_bdd
        elif [ $tst_inpt = $unttst ]; then
            echo "Initializing Unittest framework ..."
            init_unttst
        fi

        echo "Writing .gitignore..."
        wrt_gitignore

        echo "Creating git repo..."
        git init -b main

        echo ""
        echo "Project successfully created!"
        echo ""
    fi
}

clear
main
